Curso udemy SQL Oracle

1.- INTRODUCCION
	Data Manipulation Language (DML)
	SELECT
	INSERT
	UPDATE
	DELETE
	MERGE

	Data Definition Language (DDL)
	CREATE
	ALTER
	DROP
	RENAME
	TRUNCATE
	COMMENT

	Data control Language (DCL)
	GRANT
	REVOKE

	Transaction Control
	COMMIT
	ROLLBACK
	SAVEPOINT

	- Usuario HR para practica ya instalado.(Human Resource)

2.- Live SQL Oracle:
	https://livesql.oracle.com/
	Esquema: es la base de datos del usuario y todos los objetos que le pertenecen al usuario.
	-> select * from HR.EMPLOYEES
	
	Por que se presentan varias versiones para instalar en el curso?
		because you could face issues with 12c enterprise edition with windows
		but 18c express edition and 11g  express edition will work 100%
		
	Descargar 12c
	
3.- CONECTANDO A LA BASE DE DATOS (se usa root una vez solo para crear el primer usuario)
	ejecutar> SQL Plus 
	 super user: sys as sysdba
		pass:    el que instalamos
		
	> show con_name
	
	> c:\app\user\product\12.2.0\dbhome_!\network\admin\tnsnames.ora  <- archivo de config de la base de datos
	   ORCL: nombre de la conexion (Contenedor de la base de datos)
	> Abrir SQL Developer
		  User: sys as sysdba
	      Connection type: TNS
		  Network Alias: ORCL
	>Si no recuerda el pass sys: https://community.oracle.com/thread/899559 
	> Desbloqueo de usuario HR:
	     orcl: el contenedor general  (se conecta con sysdba)
		   orclpdb: el contenedor de base de prueba
		    
		> select name, con_id from v$pdbs   //para ver el diccionario info de la base de datos
		
	    > alter session set container=orclpdb  //Cambia el contenedor de la base de datos
		> show con_name
		> alter PLUGGABLE DATABASE open
		> select * from all_users; 
		> alter USER hr identified by hr account unlock;
		> pegar la conexion del pdf en el tns para hr
		> 
	> Crear un usuario
	  ORA-01033
	  ORA-65054
		sol:
			1- login as SYS as SYSdba
			2- make sure that you are in the root  CDB$ROOT
				you can know that by : show con_name
			3- do this
				alter system disable restricted session;
			4- then do this
				alter pluggable database all open;

4 y 5 ver .sql
	Para conectar con sql plus con hr:
		user: hr/hr@orclpdb
		
	 Formato fecha default
	 SELECT * FROM employees WHERE HIRE_DATE > '17-OCT-23'
	 select * from EMPLOYEES WHERE FIRST_NAME LIKE '_d%';  nombres que en su segunda letra tenga una 'd'
	 select * from EMPLOYEES WHERE FIRST_NAME LIKE '__d%';  nombres que en su tercera letra tenga una 'd'
	 select * from EMPLOYEES WHERE FIRST_NAME LIKE 'd_%';  incorrecto, revisar, no es lo mismo
	 select * from EMPLOYEES WHERE FIRST_NAME LIKE 'SA/_%';  Todos los nombres que tengan un guion bajo en tercer caracter
	 
	 select * from EMPLOYEES where COMISSIONS_PCT is null;  //=null es incorrecto es is null;
	 
	 Not equal
	   <> o !=  es lo mismo
	   
	 SELECT * FROM EMPLOYEES 
		WHERE (job_id = 'SA_REP' OR jb_id= 'AD_PRES')
		AND SALARY > 1500;
	 
	 SELECT * FROM EMPLOYEES WHERE job_id = 'SA_REP' ORDER BY COL1 ASC , COL2 DESC;		
	 SELECT COL1, COL2  FROM EMPLOYEES WHERE job_id = 'SA_REP' ORDER BY 1, 2 ; ordenar por nro de columna
	 
	 SELECT * FROM EMPLOYEES WHERE job_id = 'SA_REP' ORDER BY COL1 FETCH FIRST 10 ROWS ONLY
	 SELECT * FROM EMPLOYEES WHERE job_id = 'SA_REP' ORDER BY COL1 FETCH FIRST 50 PERCENT ROWS ONLY
	 
	 SELECT * FROM EMPLOYEES WHERE job_id = 'SA_REP' ORDER BY COL1  OFFSET 5  FETCH NEXT 5 ROWS ONLY //salta los primeros 5 registros y trae los siguientes 5
	 
	 TIES??
	 
Para que oracle pida una variable por ventana emergente
	 SELECT * FROM EMPLOYEES WHERE job_id = &JOB_ENTRADA
	 SELECT * FROM EMPLOYEES WHERE job_id = '&JOB_ENTRADA' //es lo mismo
	 
--Para scripts:
 DEFINE EMPLOYEE_NUM = 200;   
 select * from employees where EMPLOYEE_ID = &EMPLOYEE_NUM 
 UNDEFINE EMPLOYEE_NUM;	-- para eliminar la variable
 
 --ventanas emergentes
 ACCEPT DEPT_ID PROMPT 'please enter dept id'                --genera una ventana emergente con mensaje personalizado    
 SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = &DEPT_ID;
 UNDEFINE DEPT_ID;
 
 -- doble ampersand
 select * from DEPARTMENTS where DEPARTMENT_ID=&&p  -- aparece solo una vez ventana emergente y memoriza hasta que termina la sesion
 
 -- VERIFICACION
 SET VERIFY ON   -- hace que en el output muestre la query antes de reemplazar la variable y luego muestra la query con el valore reemplazado
 SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = &DEPT_ID;  
 
 -- NO VERIFICACION
 SET DEFINE OFF;       -- esto hace que no salte el prompt y queda como una cadena a buscar &DEPT_ID (Sirve para data migration)
 SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = '&DEPT_ID';  
 
 SECCION 7
 -- funciones de caracteres 
		UPPER, 
		LOWER  
		INITCAP (Upper solo a la primira letra de la cadena)
 -- manipulacion de caracteres
		LENGTH(var)              --retorna el largo de la cadena
		CONCAT(var1,var2)
		SUBSTRING(FIRSTNANE,1,3) -- inicia en caracter 1 con largo de 3 caracteres
		SUBSTRING(FIRSTNANE,2)   -- hasta el final de la cadena
		SUBSTRING(FIRSTNANE,-3)  -- si es negativo corta la cadena contando desde el final
 -- INSTR
	Retorna la posición numerica de una cadena
	SELECT INSTR(FIRST_NAME,'e')  -- retorna la posición de la primera 'e' o subcadena
	SELECT INSTR(FIRST_NAME,'e', 2)  -- retorna la posición de la segunda 'e'
 -- LPAD
	LPAD(10,'#') -- rellena la salida con un largo de 10 y con signo # como relleno a la derecha
	RPAD(10,'#')
	REPLACE(FIRS_NAME,'a','*') -- reemplaza todos los caracteres a por un asterisco

 -- SELECT * FROM DUAL -- taba publica para mostrar datos
 -- LEADING, TRAILING, BOTH ?
 -- ROUND(10.5)  -- retorna 11
    ROUND(10.49, 1) -- solo toma el primer decimal y redondea, retorna 10.5
    TRUNC(10.65)    -- elimina los decimales
	TRUNC(10.65, 1) -- elimina el ultimo decimal
	MOD(10,5) =  0  -- retorna el modulo de la división.
    
 -- DATE FUNCTIONS defaul es DD-MON-RR 
   WHERE hire_date <  '1-FEB-23'
   -- date + number  -- suma días a la fecha
      date - number
   -- SELECT SYSDATE FROM DUAL -- SYSDATE es una funcion que retorna la fecha del servidor de base de datos
   -- MONTHS_BETWEEN(SYSDATE, HIREDATE) -- retorna los meses transcurridos entre las variables date   
   -- ADD_MONTHS(hiredate, 4)           -- suma 4 meses
   -- NEXT_DAY(SYSDATE,2)   -- 1 es domingo, 2 es lunes, retorna fecha del proximo lunes
   -- LAST_DAY(SYSDATE)     -- retorna la fecha del último día de la semana actual
   
   -- ROUND(SYSDATE, 'MONTH') --result 1-AUG-03  (asume sysdate = 25-JUL-03)
   
 -- Funciones anidadas
     func1(func2(func3()))

 --conversion de datos
      TO_CHAT(date,'format_model')
	  
	  ELEMENTOS DEL FORMAT MODEL
	  YYYY	Full year en numero
	  YEAR	Year deletreado en ingles
	  MM	2 digitos para el mes
	  MONTH Full name para el meses
	  MON	Tres caracteres para el meses
	  DY	Tres caracteres para el día
	  DAY	Full name del día
	  DD	Numérico
	  
	  CONVERSION DE FECHAS a char
	 -- SELECT TO_CHAR(SYSDATE,'dd-mm-yyyy hh:mi:ss AM') FROM DUAL;--AM AND PM are the same
	 -- SELECT TO_CHAR(SYSDATE,'dd-mm-yyyy hh24:mi:ss PM') FROM DUAL;
	 -- TO_CHAR(HIRE_DATE, 'fmDD Month YYYY')   --fm elimina espacios y 0 innecesarios
	 -- SELECT TO_CHAR(SYSDATE,'FMDDsp "OF" MONTH YYYY') FROM DUAL;  --sp spell el día (deletrea)
	 --	SELECT * FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'yyyy')='2003';  --list all the employees who employeed in 2003
	 
	 CONVERSION DE NUMEROS a char
	 TO_CHAR(number[,format_model])
	 9	Representa nun numero
	 0	Fuerza a cero lo que se va a mostrar (es lo mismo que usar el 9)
	 $  Pone un signo de dolar
	 L  usa el sibno de currency local
	 .  print un punto decimal
	 ,  print separador de miles
	 SELECT TO_CHAR(1598,'9,999') FROM DUAL;  -- formatea a caracteres y con una coma como separador de miles
	 SELECT TO_CHAR(1598,'9G999') FROM DUAL;  -- es lo mismo que lo anterior
	 SELECT TO_CHAR(1598.87,'9999.99') FROM DUAL; -- para los decimales
	 SELECT TO_CHAR(1598.87,'$9G999D99') FROM DUAL; --miles y decimales y el signo peso
	 SELECT TO_CHAR(1598.87,'9999.9') FROM DUAL; -- hace un redondeo al ultimo decimal
	 SELECT TO_CHAR(1598,'99') FROM DUAL  -- esto produce un error por que falta  2 99
	 SELECT TO_CHAR(1598,'00000') FROM DUAL; -- esto agregaría un cero adelante
	 ---THE BEST
     SELECT TO_CHAR(1598,'999,999,999') FROM DUAL; -- arroja 1,598
	 SELECT LENGTH('-7') FROM DUAL;  -- retorna 2
	 
	 CONVERSION A NUMERO
	SELECT TO_NUMBER('1,000','9,999') FROM DUAL;
	SELECT TO_NUMBER('$1,000','$9,999') FROM DUAL;
	SELECT TO_NUMBER('88') FROM DUAL;
	SELECT TO_NUMBER('1,980','9G999') FROM DUAL;


	--4 using to_date
	SELECT TO_DATE('10-11-2015','dd-mm-yyyy') FROM DUAL;
	SELECT TO_DATE('10.11.2015','dd.mm.yyyy') FROM DUAL;
	SELECT TO_DATE('10.november.2015','dd.month.yyyy') FROM DUAL;


	SELECT * FROM EMPLOYEES WHERE HIRE_DATE> TO_DATE('10-11-2003','dd-mm-yyyy');
	SELECT * FROM EMPLOYEES WHERE HIRE_DATE> TO_DATE('10-11-     2003','dd-mm-yyyy'); --oracle remove spaces 
	SELECT * FROM EMPLOYEES WHERE HIRE_DATE> TO_DATE('10-11- 2003','fxdd-mm- yyyy'); --when you put fx then exact should be mach

	--RR AND YY
	--rr fomrat
	--in general if the value between  50-99 THIS return a 19xx year
	-- A value between 0-49 will return a 20xx year 
	SELECT TO_DATE('1-1-85','DD-MM-RR')  from dual;
	SELECT TO_CHAR( TO_DATE('1-1-85','DD-MM-RR'),'YYYY')  from dual;
	SELECT TO_DATE('1-1-85','DD-MM-YY')  from dual;
	SELECT TO_CHAR(TO_DATE('1-1-85','DD-MM-YY'),'YYYY')  from dual;

    Funciones generales
	NVL  -- si el valor es nulo define un valor
	