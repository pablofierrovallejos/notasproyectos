1 instalar kubernetes
	Master
	> wget https://cm.lf.training/LFD259/LFD259_V2024-02-22_SOLUTIONS.tar.xz --user=LFtraining --password=Penguin2014
	> bash k8scp.sh | tee $HOME/cp.out

	Worker
	> bash k8sWorker.sh | tee worker.out
	> kubeadm join 192.168.0.107:6443 --token 2virfm.rczgnfq6q3z44r4x --discovery-token-ca-cert-hash sha256:fccd0990c4bf7374989c23a503f15a62ebcbcc1af2e817dc1227de4e70cf22b4 

2.- Cambiar nombre de hostname
	> sudo hostnamectl set-hostname worker1
	
1.- lsb_release -a      //Para averiguar la versión de ubuntu


2.- Cambiar a ipfija
    1.- Obtener el nombre de la interface con ifconfig
    2.- Modificar archivo de config red ubicado en:
        /etc/netplan/01-network-manager-all.yaml

        Poner tal cual según el nombre de interface que tenemos:
		
# Let NetworkManager manage all devices on this system
network:
  version: 2
  renderer: NetworkManager
  ethernets:
    enp0s3:
        dhcp4: no
        addresses: [192.168.0.107/24]
        gateway4: 192.168.0.1
        nameservers:
           addresses: [8.8.8.8,8.8.4.4]


    3.- Aplicar con:
        sudo netplan apply

3.- Habilitar ssh (no viene con ubuntu desktop)
    $ sudo apt update
    $ sudo apt install openssh-server
    $ sudo systemctl status ssh         // comprobar el estado del servicio SSH:
    $ sudo ufw allow 22/tcp             // Para permitir el puerto 22 en el cortafuego UFW:
    $ ssh pablo@192.168.0.100           // Para conectarse (debe existir el usuario en linux)

    $ sudo ufw deny 22/tcp              // para denegar por cortafuego
    $ sudo systemctl stop –now ssh      // para detener el servicio
    $ sudo systemctl disable –now ssh   // para deshabilitar ssh


4.- Instalar docker desktop 
    (error al descargar el dev)
    The following packages have unmet dependencies:
    docker-desktop : Depends: docker-ce-cli but it is not installable
    E: Unable to correct problems, you have held broken packages.

    sol: https://stackoverflow.com/questions/72299444/docker-desktop-doesnt-install-saying-docker-ce-cli-not-installable/73455413#73455413
    
    $ sudo apt install -y ca-certificates curl gnupg lsb-release
    $ sudo mkdir -p /etc/apt/keyrings
    $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    $ sudo apt update -y
	
	
	5.- Averiguar versión de linux
		> cat /etc/os-release
		> lsb_release -d
		
	
	6.-Conectar ssh a cloud google
	> ssh cp@34.176.235.140
	cp@34.176.235.140: Permission denied (publickey).
	
	  -1 Generar your key
	  > ssh-keygen
		Your identification has been saved in C:\Users\Gamer/.ssh/id_rsa.
		Your public key has been saved in C:\Users\Gamer/.ssh/id_rsa.pub.
		The key fingerprint is:
		SHA256:Rb1D7G5NHP2ATskb/QtDVhX+KnNClcfUpYiieMpIA2I gamer@DESKTOP-MAIN1
		
	  >	ssh -vvv -i .ssh/id_rsa cp@34.176.235.140
	  
	 
Instalar qemu
> sudo apt install qemu-system-x86

------------------------------------------
Para instalar haproxy
https://howtoforge.es/como-instalar-y-configurar-haproxy-en-ubuntu-22-04/

frontend apache_front
        # Frontend listen port - 80
        bind *:80
        # Set the default backend
        default_backend    apache_backend_servers
        # Enable send X-Forwarded-For header
        option             forwardfor
  
# Define backend
backend apache_backend_servers                                                                                                                     
        # Use roundrobin to balance traffic
        balance            roundrobin
        # Define the backend servers
        server             backend01 172.16.0.200:80 check
        server             backend02 172.16.0.201:80 check
		
		
		
#Actualizar la ip del masternode (no funcionó)
> kubeadm config images pull
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.29.6
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.29.6
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.29.6
[config/images] Pulled registry.k8s.io/kube-proxy:v1.29.6
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.1
[config/images] Pulled registry.k8s.io/pause:3.9
[config/images] Pulled registry.k8s.io/etcd:3.5.10-0

Desinstalar kubernetes
https://www.baeldung.com/ops/kubernetes-uninstall
> sudo kubeadm reset

------------------------------------------
Instalar Keepalived en raspberry
https://raspberry-hosting.com/en/faq/where-can-i-find-actual-haproxy-and-keepalived-deb-packages-raspberry-pi-and-how-i-install-high


Configuracion HA

Raspberry 1 keepalived
ip: 		http://192.168.2.56
virtual ip: http://192.168.2.2/   <--- POR aca acceder con explorador
HAPROXY (balanceo):
	to 	-> 192.168.2.222
		-> 192.168.2.223

Raspberry 2 keepalived
ip: 		http://192.168.2.57
virtual ip: http://192.168.2.2/
HAPROXY (balanceo):
	to 	-> 192.168.2.222
		-> 192.168.2.223

----------------------------------------------------		
Instalar Keepalived ubuntu 24-04
>sudo apt -y install keepalived		

----------------------------------------------------		        
Configuracion haproxy activo pasivo
https://www.haproxy.com/blog/emulating-activepassing-application-clustering-with-haproxy
		
		

kubectl config use-context k8s


--- Instructivo para encender autopos
->1.- Kubernetes
		Máquina física:  192.168.2.222:30100
->2.- Raspberry Física BALANCEO:	
		ip física:  	 192.168.2.57
		ip virtual:  	 192.168.2.2 <------	
		ip balanceo-1: 	 192.168.2.222      |
		ip balanceo-2: 	 192.168.2.223      |
->3.- Kubernetes virtual                    | 
		Máquina virtual: 192.168.2.223      | 
->4.- Raspberry Virtual BALANCEO:           |
		ip física:	                        |
		ip virtual:   	 192.168.2.2 <------       
		
		
-- HA NFS
	https://help.ubuntu.com/community/HighlyAvailableNFS
	

private baseUrl = "http://microserver:30600"
curl servicio-productos.ventas2.svc.cluster.local:8090


http://192.168.2.2/haproxy_stats

https://www.youtube.com/watch?v=JTMJx9XmTLQ


	
	
Variable de entorno en angular para micro
https://ychetankumarsarma.medium.com/how-to-manage-angular-application-configurations-for-different-environments-with-docker-and-8ff8c55a1c7d



Failure executing: GET at: https://10.96.0.1/api/v1/namespaces/default/configmaps. Message: Forbidden!Configured service account doesn't have access. 
Service account may have been revoked. configmaps is forbidden: User "system:serviceaccount:default:default" 
cannot list resource "configmaps" in API group "" in the namespace "default".. Ignoring.


//COn esto logré darle permisos al micro para que tuviera acceso a los configmaps
kubectl create cm default
kubectl create clusterrole secretmanipulator --verb=get --verb=list --verb=watch --verb=create --verb=update --verb=patch --verb=delete --resource=configmaps
kubectl -n default create rolebinding allowsecretmanipulation --clusterrole=secretmanipulator --serviceaccount=default:default

Switch namespace only using the kubectl commands::
kubectl config set-context --current --namespace=<namespace>

----------------------
Instalar webmin

curl -fsSL https://download.webmin.com/jcameron-key.asc | sudo gpg --dearmor -o /usr/share/keyrings/webmin.gpg

---------------------
-- Instalar NFS
https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-ubuntu-20-04-es

En el servidor
>sudo apt update
>sudo apt install nfs-kernel-server
>sudo mkdir /var/nfs/general -p
>ls -la /var/nfs/general
	drwxr-xr-x 2 root root 4096 May 14 18:36 .
>sudo chown nobody:nogroup /var/nfs/general
>sudo nano /etc/exports
	/var/nfs/general    client_ip(rw,sync,no_subtree_check)	//client_ip = Poner la ip del servidor
>sudo systemctl restart nfs-kernel-server
>sudo ufw status
>sudo ufw allow from client_ip to any port nfs
>sudo ufw status
	
	
En el cliente
>sudo apt update
>sudo apt install nfs-common
>sudo mkdir -p /nfs/general
>sudo mount host_ip:/var/nfs/general /nfs/general

>df -h
>sudo touch /nfs/general/general.test
>ls -l /nfs/general/general.test

-------------------------
Crear una particion
https://www.transip.eu/knowledgebase/139-create-new-partition-ubuntudebiangentoo-linux/
https://openwebinars.net/blog/9-comandos-basicos-fdisk-para-gestionar-el-disco-duro/
https://pucomi.blogspot.com/2015/08/ubuntu-montar-disco-desde-la-terminal.html

>su -i
>lsblk					//para ver los devices
>fdisk -l				//para ver detalle de los devices y particiones
>fdisk /dev/sdb			//para entrar al menu del disco y crear particion
>mkfs.ext4 /dev/sdb1	//Formatear la partición
sudo mount /dev/sdb1 /media/Data	//Montar la partición en folder /media/Data
---------
AGREGAR un banner al inicio del ssh
1.- Crear archivo con banner
	> figlet banner > mi_mensaje.txt
2.- Setear el banner en ssh
	> sudo nano /etc/ssh/sshd_config
	- Editar line > Banner /etc/ssh/mi_mensaje.txt
3.- Reiniciar servicio ssh	
> sudo systemctl reload ssh.service

---------------------------
Para abrir un puerto reverso desde Laja y luego conectar de talcahuano
Ej: 
	ssh -N -f -R 22023:localhost:22 talcahuano.ddns.net

En origen
	ssh -p 22023 root@localhost
	
	ssh -p 22024 pi@localhost
netstat -natup


 wget https://cm.lf.training/LFD259/LFD259_V2024-02-22_SOLUTIONS.tar.xz --user=LFtraining --password=Penguin2014
 
 
 
 --- desplegar ventas
 >create namespace ventas
 >kubectl create -f 0-roles.yaml
 >kubectl create -f 1-servicio-productos-deploy.yaml
 >kubectl create -f 2-servicio-productos-serv.yaml
 >kubectl create -f 3-servicio-ng-front-vtas-deply.yaml
 >kubectl create -f 4-servicio-ng-front-vtas-serv.yaml
 >kubectl create -f 5-configmaps.yaml
 
 
 io.fabric8.kubernetes.client.KubernetesClientException: Failure executing: GET at: https://10.96.0.1/api/v1/namespaces/ventas/configmaps. Message: 
 Forbidden!Configured service account doesn't have access. Service account may have been revoked. 
 configmaps is forbidden: User "system:serviceaccount:ventas:default" cannot list resource "configmaps" 
 in API group "" in the namespace "ventas".
 
####################################################################################################################### 
 Manual para instalar keepalive y haproxy linux ubuntu
 https://thelinuxforum.com/articles/706-how-to-set-up-haproxy-with-keepalived-for-high-availability
 >sudo apt update
 >sudo apt-get install haproxy
 >sudo nano /etc/haproxy/haproxy.cfg  (Pegar lo siguiente)
 
#Define front 
frontend apache_front       
        bind *:80									# Frontend listen port - 80
        default_backend    apache_backend_servers	# Set the default backend
        option             forwardfor				# Enable send X-Forwarded-For header

# Define backend
backend apache_backend_servers
        balance            roundrobin							# Use roundrobin to balance traffic
        server             backend01 192.168.2.209:30100 check	# Define the backend servers
        server             backend02 172.16.0.201:80 check


#Define API front
frontend api_front
        bind *:30600								# Frontend listen port - 30600
        default_backend    api_backend_servers		# Set the default backend	
        option             forwardfor				# Enable send X-Forwarded-For header

# Define API backend
backend api_backend_servers
        balance            roundrobin							# Use roundrobin to balance traffic
        server             backend01 192.168.2.209:30600 check	# Define the backend servers
        server             backend02 172.16.0.201:80 check
 
 
>sudo apt-get install keepalived
>sudo nano /etc/keepalived/keepalived.conf  (Lo siguiente es ejemplo con 1 nodo)
 
global_defs {
        lvs_id haproxy01
}

vrrp_sync_group SyncGroup01 {
        group {
                VI_1
        }
}

vrrp_script chkhaproxy {
        script "/usr/bin/killall -0 haproxy"
        script "/usr/sbin/service haproxy start"
        interval 9
        timeout 3
        weight 20
        rise 2
        fall 4
}

vrrp_instance VI_1 {
        interface ens18                # interface to monitor
        state MASTER
        virtual_router_id 51          # Assign one ID for this route
        priority 101                  # 101 on MASTER, 100 on BACKUP
        advert_int 5
        authentication {
                auth_type PASS
                auth_pass 6c7448fdece8f61841c60293f9a8bd3c
        }
        virtual_ipaddress {
                192.168.2.222         # the virtual IP
        }
        track_script {
                chkhaproxy
        }
}

 >sudo keepalived -t
 >sudo systemctl start haproxy
 >sudo systemctl start keepalived
 ####################################################################################################################### 

---------------------------------------------------
Desactivar swapp

sudo sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab

---------------------------------------------------
Para instalar zip2john (obitiene el hash de un archivo zip)
https://www.reddit.com/r/linux4noobs/comments/15nsckk/command_zip2john_not_found_help/

>git clone "https://github.com/magnumripper/JohnTheRipper.git" 
>cd JohnTheRipper/src 
>./configure 
>sudo make -s clean  
>sudo make -sj2 
>sudo mv JohnTheRipper /usr/local
>sudo ln -s /usr/local/JohnTheRipper/run/zip2john /usr/local/bin/zip2john


--------------------
Encontrar el pass con hashcat modo diccionario
    https://www.freecodecamp.org/news/hacking-with-hashcat-a-practical-guide/

Ejemplos de hash a obtener la clave:
MD5 hash -> 42f749ade7f9e195bf475f37a44cafcb > md5.txt
SHA1 hash -> b2e98ad6f6eb8508dd6a14cfa704bad7f05f6fb1 > sha1.txt

Para el md5
>hashcat -m 0 -a 0 md5.txt rockyou.txt	    //el -m 0 indica md5

Para el sha1
>hashcat -m 100 -a 0 sha1.txt rockyou.txt   //El -m 100 indica sha1

Ataque de diccionario (-a 0)
Ataque combinador (-a 1)
Ataque de máscara (-a 3)

Link con listado de tipos de hashes
https://hashcat.net/wiki/doku.php?id=example_hashes

Comando para fuerza bruta a partir de hash <-----
> hashcat -m 17225 hashes.txt -a 3 ?d?d?d?d?d?d?d?d
Tiempo estimado 11 días


-----
Para ver el estado de la tarjeta gráfica nvidia 
>nvidia-smi

Esta es como un top
>nvitop
Se instala con:
>sudo apt install nvitop
-----
